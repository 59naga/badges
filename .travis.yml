# 2017 January 27
# https://github.com/bevry/base


# Use the latest travis infrastructure
sudo: false


# Complete Node.js Version Matrix
# https://github.com/balupton/awesome-travis#complete-nodejs-version-matrix
language: node_js
node_js:
  - "0.8"   # end of life
  - "0.10"  # end of life
  - "0.12"  # maintenance
  - "4"     # lts
  - "6"     # lts
  - "7"     # stable
matrix:
  fast_finish: true
  allow_failures:
    - node_js: "0.8"
    - node_js: "0.10"
cache:
  directories:
    - node_modules


install: |
  # Ensure NPM is latest
  # https://github.com/balupton/awesome-travis#ensure-npm-is-latest
  export CURRENT_NPM_VERSION="$(npm --version)"
  export LATEST_NPM_VERSION="$(npm view npm version)"
  if test "$CURRENT_NPM_VERSION" != "$LATEST_NPM_VERSION"; then
    echo "running an old npm version, upgrading"
    npm instal npm --global --cache-min=Infinity
  fi

  # Ensure dependencies install with a LTS node version
  # https://github.com/balupton/awesome-travis#use-lts-node-version-for-preparation
  export CURRENT_NODE_VERSION="$(node --version)"
  export LTS_NODE_VERSIONS="$(nvm ls-remote --lts)"
  if echo "$LTS_NODE_VERSIONS" | grep "$CURRENT_NODE_VERSION"; then
    echo "running on a LTS node version, completing setup"
    npm run our:setup
  else
    echo "running on a non-LTS node version, completing setup on a LTS node version"
    nvm install --lts
    export LTS_NODE_VERSION="$(node --version)"
    npm run our:setup
    nvm use "$TRAVIS_NODE_VERSION"
  fi


before_script: |
  # Ensure compilation and linting occur on a LTS node version
  # https://github.com/balupton/awesome-travis#use-lts-node-version-for-preparation
  if test "$LTS_NODE_VERSION"; then
    echo "running on a non-LTS node version, compiling with LTS, skipping linting"
    nvm use "$LTS_NODE_VERSION"
    npm run our:compile
    nvm use "$TRAVIS_NODE_VERSION"
  else
    echo "running on a LTS node version, compiling and linting"
    npm run our:compile && npm run our:verify
  fi


after_success: |
  # Deploy Release to Surge
  # travis encrypt "SURGE_LOGIN=$SURGE_LOGIN" --add env.global
  # travis encrypt "SURGE_TOKEN=$SURGE_TOKEN" --add env.global
  if test "$LTS_NODE_VERSION"; then
    echo "running on a non-LTS node version, skipping release deployment"
  else
    echo "running on a LTS node version, performing release deployment"
    npm run our:release:prepare
    npm install surge
    export SURGE_SLUG="$(node -e \"process.stdout.write('a/b'.toString().split('/').reverse().join('.'))\")"
    surge --project . --domain "$TRAVIS_BRANCH.$SURGE_SLUG.surge.sh"
  fi


# Custom Configuration
env:
  global:
  # Deploy Release to Surge
  - secure: AYNghdBdVYTYSpAeIdG5g7isa3K4axsIqJ78FF9rQB0BTslp+aPk+6zbtCrj8YmTsQ31Zc+ybf5rwcGZILPoHHzeOfJZJ7Ezzpz/pFIPAce1Xu/hKNUWHfC8tRxOpsfCwZVipwdNt1CMt+8AuRkDXj8rGnMslN2SVub3jmokmsE=
  - secure: YB7QC4qeZoBdCLQIToYJaBYi0GYX37XYH6Q8U15MUYuu+txxoTT5YYk5ubGCNgvbXl0Hk/vnx+yrjk5VQ3LSfRyG3H4BvrsyxUkbWuWtv8efXIh+3Tiw2XR7mmkQKG8imRwOD0tclduTJ4t4evlXXFwGWxnUybOKXtqwnfObaLQ=


# https://github.com/balupton/awesome-travis#slack
# https://github.com/balupton/awesome-travis#email
notifications:
  slack:
    secure: OBP0j0sAz/ELAsVlgWmoVREOvNsnrc2+K7twXUgPJqBWwtvLfi7p9VbD1w7GPt2h+ecugrIQQZZW+RJ3xFIvmrUJ09et5hyGdhC8r+j/lBHNFF6kQzSoPt3lB/ka1CpEdJMG90aSdv9wLH0bwFVBUzo4o4l06nQTjh8+hW/BRsk=
  email:
    recipients:
      secure: TiHfSAlG8Fc65I5h4qk2vMttohyFWNFfXJadWmYaBjSBQ8El/FeGbi+8Ezg0H97Zr+2DQtdlFmmLkrVsazY2zr8lCwU5Nqhv6YwXW233b1wirTRy0wuUZRmh7A7q9s7oE0MoQCiu6yr137DEBMTE7wcHTGh6rsFUgF2W42pGhtc=
